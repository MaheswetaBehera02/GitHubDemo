# -*- coding: utf-8 -*-
"""emissionDatapy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WxA_U7x6RfyrWYPK-1vPqrKLKAQ1D9mH
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd
import io

df = pd.read_csv(io.BytesIO(uploaded['emissionDataNewAnalysis.csv']))
df.head()

import csv
def convert_dash_to_zero_optimized(csv_file):
    with open(csv_file, "r") as csv_file:
        reader = csv.reader(csv_file, delimiter=",")

        with open("new_csv_file.csv", "w", newline="") as new_csv_file:
            writer = csv.writer(new_csv_file, delimiter=",")

            for row in reader:
                new_row = [0 if cell == '-' else cell for cell in row]

                writer.writerow(new_row)
convert_dash_to_zero_optimized(uploaded['emissionDataNewAnalysis.csv'])

filtered_data = df[df['Part No'] != '']
unique_part_numbers =filtered_data['Part No'].nunique()

print(unique_part_numbers)

grouped_df = df[df['Supplier'].notnull()].groupby('Supplier')
print(grouped_df)

grouped_df = df[df['Supplier'].notnull()]
print(len(grouped_df))

print(len(grouped_df))

total_groups = len(grouped_df)
for name, group in grouped_df:
    total_rows = len(group)
    print("Supplier:", name)
    print("Total Rows:", total_rows)

print("Total Groups:", total_groups)

df = pd.read_csv(io.BytesIO(uploaded['emissionDataNewAnalysis.csv']))
grouped_ct = df[df['Category'].notnull()].groupby('Category')
total_groups_category = len(grouped_ct)
# for name, group in grouped_ct:
#     total_rows = len(group)
#     print("Category:", name)
#     print("total_rows:", total_rows)


# print("Total Groups category:", total_groups_category)
total_groups = grouped_ct.ngroups
group_counts = grouped_ct.size()
print("Total Groups:", total_groups)
print("Total Rows in Each Group:")
print(group_counts)
group_counts_df = group_counts.reset_index(name='count')
plt.figure(figsize=(10, 6))
plt.bar(group_counts_df['Category'], group_counts_df['count'])
plt.xlabel('Category')
plt.ylabel('Count')
plt.title('Total Rows in Each Group')
plt.xticks(rotation=90)
plt.tight_layout()
plt.show()

import matplotlib.pyplot as plt
filtered_df = df[df['Supplier'].notna()]
grouped_df = filtered_df.groupby('Supplier')
total_groups = grouped_df.ngroups
group_counts = grouped_df.size()
print("Total Groups:", total_groups)
print("Total Rows in Each Group:")

# group_counts_df = group_counts.reset_index(name='count')
#  shortened_headers = [header[:5] + '.' if len(header) > 10 else header for header in group_counts.index]
group_counts = grouped_df.size().sort_values(ascending=False)

# Select the top 10 suppliers based on count
top_10_suppliers = group_counts.head(10)
print(top_10_suppliers)
# Create a bar chart
plt.figure(figsize=(10, 6))
top_10_suppliers.plot(kind='bar')
plt.title('Top 10 Suppliers')
plt.xlabel('Supplier')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.show()

df["total_sales"] = df["2019-2020 Buying"] + df["2020-2021 Buying"] + df["2021-2022 Buying"] + df["2022-2023 Buying"]
top_10_part_numbers = df.sort_values("total_sales", ascending=False).head(10)["Part No"].tolist()
sales_values = []
print(df["total_sales"] )
for part_number in top_10_part_numbers:
    sales_values.append(df[df["Part No"] == part_number]["total_sales"].values[0])

    # Create a list of labels.
    labels = top_10_part_numbers

import matplotlib.pyplot as plt
df = pd.read_csv(io.BytesIO(uploaded['emissionDataNewAnalysis.csv']))

df['2019-2020 Buying'].replace('-', 0, regex=True, inplace=True)
df['2020-2021 Buying'].replace('-', 0, regex=True, inplace=True)
df['2021-2022 Buying'].replace('-', 0, regex=True, inplace=True)
df['2022-2023 Buying'].replace('-', 0, regex=True, inplace=True)
# df = df.loc[150:200, ['Part No', '2019-2020 Buying', '2020-2021 Buying', '2021-2022 Buying','2022-2023 Buying']]
df['2019-2020 Buying'] = df['2019-2020 Buying'].str.replace(',', '').astype("float")
df['2020-2021 Buying'] = df['2020-2021 Buying'].str.replace(',', '').astype("float")
df['2021-2022 Buying'] =  df['2021-2022 Buying'].str.replace(',', '').astype("float")
df['2022-2023 Buying'] = df['2022-2023 Buying'].str.replace(',', '').astype("float")

buying_columns = ['2019-2020 Buying','2020-2021 Buying', '2021-2022 Buying', '2022-2023 Buying']
df['total_buying'] = df[buying_columns].sum(axis=1, numeric_only=True)

top_10_parts = df.sort_values(by="total_buying", ascending=False).head(10)
print(top_10_parts['total_buying'])
# Create the bar plot
plt.figure(figsize=(10, 6))
plt.bar(top_10_parts['Part No'], top_10_parts['total_buying'])
plt.xlabel('Part No')
plt.ylabel('total_buying')
plt.title('Top 10 Parts by Buying Quantity')
plt.xticks(rotation=90)
for i, value in enumerate(top_10_parts['total_buying']):
    plt.text(i, value, str(value), ha='center', va='bottom')
plt.tight_layout()
plt.show()